name: Migrate environments

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Get deployment environments from source repo
        id: get-envs
        uses: actions/github-script@v7
        with:
          result-encoding: json
          script: |
            const response = await github.rest.repos.getAllEnvironments({
              owner: 'liatrio-enterprise',
              repo: 'environment-migration-test',
            });

            for (const env of response.data.environments) {
              let wait_timer;
              if (env.protection_rules) {
                env.protection_rules.forEach((rule) => {
                  if (rule.type === 'wait_timer') {
                    wait_timer = rule.wait_timer;
                  }
                });
              }

              env.wait_timer = wait_timer;
            }

            return response.data;     
            
      - name: Create deployment environments in target repo
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const environments = ${{ steps.get-envs.outputs.result }};
            console.log(environments);

            for (const env of environments.environments) {
              let wait_timer;
              if (env.protection_rules) {
                env.protection_rules.forEach((rule) => {
                  if (rule.type === 'wait_timer') {
                    wait_timer = rule.wait_timer;
                  }
                });
              }
              env.wait_timer = wait_timer;

              const protected_branches = env.deployment_branch_policy ? env.deployment_branch_policy.protected_branches : null;
              const custom_branch_policies = env.deployment_branch_policy ? env.deployment_branch_policy.custom_branch_policies : null;

              await github.rest.repos.createOrUpdateEnvironment({
                owner: 'liatrio-enterprise',
                repo: 'calvin-test',
                environment_name: env.name,
                deployment_branch_policy: env.deployment_branch_policy ? {
                  protected_branches: protected_branches,
                  custom_branch_policies: custom_branch_policies,
                } : null,
                wait_timer: env.wait_timer,
              });
